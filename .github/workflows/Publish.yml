name: Publish

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - dev
      - patch

jobs:
  publish-and-archive:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Publish x64
      run: dotnet publish Launcher.csproj --runtime win-x64 -p:PublishSingleFile=true -p:AssemblyName=Launcher -o PublishedWinExe -c Release --no-self-contained

    - name: Publish x86
      run: dotnet publish Launcher.csproj --runtime win-x86 -p:PublishSingleFile=true -p:AssemblyName=Launcher_x86 -o PublishedWinExe -c Release --no-self-contained

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Launcher
        path: PublishedWinExe

  tag-and-release:
    needs: publish-and-archive
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get tag name
        id: get_tag
        run: |
          TAG_NAME=$(date +'%y%m%d')
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          if git rev-parse ${{ steps.get_tag.outputs.tag_name }} >/dev/null 2>&1; then
            echo "Tag ${{ steps.get_tag.outputs.tag_name }} already exists, skip create and push."
            exit 0
          fi
          git tag ${{ steps.get_tag.outputs.tag_name }}
          git push origin ${{ steps.get_tag.outputs.tag_name }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: Launcher
          path: PublishedWinExe

      - name: Zip x64
        run: |
          cd PublishedWinExe
          zip -j ../Launcher.zip Launcher.exe
        shell: bash

      - name: Zip x86
        run: |
          cd PublishedWinExe
          zip -j ../Launcher_x86.zip Launcher_x86.exe
        shell: bash

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          files: |
            Launcher.zip
            Launcher_x86.zip
          overwrite_files: true
          name: Release ${{ steps.get_tag.outputs.tag_name }}
          tag_name: ${{ steps.get_tag.outputs.tag_name }}
          generate_release_notes: true
          append_body: false
          make_latest: true
          repository: TheMagicFlute/Launcher_V2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}